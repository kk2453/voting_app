{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\votingapp-1\\\\my-app\\\\src\\\\components\\\\Results.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useNavigate, useState } from 'react';\nimport Notecontext from \"../context/notes/NotesContext\";\nimport Resultitems from './Resultitems';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Results() {\n  _s();\n  const a = useContext(Notecontext);\n  const navigate = useNavigate;\n  // const [winner,setwinner]=useState({voteCount:0,name:\"\"});\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token1\")) {\n      a.getNotes();\n      findWinner();\n    } else {\n      navigate(\"/\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  //   {a.notes.forEach((note) => {\n  //     if(note.voteCount>winner.voteCount){\n  //         console.log(note.voteCount,note.name);\n  //         setwinner(note.voteCount,note.name);\n  //         return(null);\n  //     }\n  //   })}\n\n  const [winner, setWinner] = useState(null);\n\n  // Function to find the note with the highest votes\n  const findWinner = () => {\n    let highestVoteNote = null;\n    a.notes.forEach(note => {\n      if (!highestVoteNote || note.voteCount > highestVoteNote.voteCount) {\n        highestVoteNote = note;\n      }\n    });\n    if (highestVoteNote) {\n      console.log(\"Winner:\", highestVoteNote.name, \"with\", highestVoteNote.voteCount, \"votes\");\n      setWinner(highestVoteNote); // Set the winner note in state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\",\n      style: {\n        height: \"500px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-auto\",\n        children: a.notes.map(note => {\n          return /*#__PURE__*/_jsxDEV(Resultitems, {\n            note: note,\n            name: note.name,\n            party: note.party,\n            voteCount: note.voteCount\n          }, note._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Reasult::The winner is -  with \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: winner.voteCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 40\n      }, this), \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Results, \"WEWiMJiwTL5lhkZQHP319QC1Bxo=\");\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useContext","useEffect","useNavigate","useState","Notecontext","Resultitems","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","_s","a","navigate","localStorage","getItem","getNotes","findWinner","winner","setWinner","highestVoteNote","notes","forEach","note","voteCount","console","log","name","children","className","style","height","display","justifyContent","alignItems","map","party","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/votingapp-1/my-app/src/components/Results.js"],"sourcesContent":["import React,{useContext,useEffect,useNavigate, useState} from 'react'\r\nimport Notecontext from \"../context/notes/NotesContext\";\r\nimport Resultitems from './Resultitems';\r\n\r\nexport default function Results() {\r\n    const a = useContext(Notecontext);\r\n    const navigate=useNavigate;\r\n    // const [winner,setwinner]=useState({voteCount:0,name:\"\"});\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token1\")) {\r\n          a.getNotes();\r\n          findWinner();\r\n          \r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n        // eslint-disable-next-line\r\n      }, []);\r\n    \r\n    //   {a.notes.forEach((note) => {\r\n    //     if(note.voteCount>winner.voteCount){\r\n    //         console.log(note.voteCount,note.name);\r\n    //         setwinner(note.voteCount,note.name);\r\n    //         return(null);\r\n    //     }\r\n    //   })}\r\n\r\n    const [winner, setWinner] = useState(null);\r\n\r\n  // Function to find the note with the highest votes\r\n  const findWinner = () => {\r\n    let highestVoteNote = null;\r\n\r\n    a.notes.forEach((note) => {\r\n      if (!highestVoteNote || note.voteCount > highestVoteNote.voteCount) {\r\n        highestVoteNote = note;\r\n      }\r\n    });\r\n\r\n    if (highestVoteNote) {\r\n      console.log(\"Winner:\", highestVoteNote.name, \"with\", highestVoteNote.voteCount, \"votes\");\r\n      setWinner(highestVoteNote);  // Set the winner note in state\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    <div className=\"container text-center\" style={{height:\"500px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n        <div className=\"row row-cols-auto\">\r\n            {a.notes.map((note) => {\r\n                return (\r\n                    <Resultitems\r\n                        key={note._id}\r\n                        note={note}\r\n                        name={note.name}\r\n                        party={note.party}\r\n                        voteCount={note.voteCount}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n        \r\n    </div>\r\n    <div>\r\n        Reasult::The winner is -  with <div>{winner.voteCount}</div> votes\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,UAAU,EAACC,SAAS,EAACC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AACtE,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EACjC,MAAMS,QAAQ,GAACX,WAAW;EAC1B;;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIa,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;MAClCH,CAAC,CAACI,QAAQ,CAAC,CAAC;MACZC,UAAU,CAAC,CAAC;IAEd,CAAC,MAAM;MACLJ,QAAQ,CAAC,GAAG,CAAC;IACf;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIG,eAAe,GAAG,IAAI;IAE1BR,CAAC,CAACS,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;MACxB,IAAI,CAACH,eAAe,IAAIG,IAAI,CAACC,SAAS,GAAGJ,eAAe,CAACI,SAAS,EAAE;QAClEJ,eAAe,GAAGG,IAAI;MACxB;IACF,CAAC,CAAC;IAEF,IAAIH,eAAe,EAAE;MACnBK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,eAAe,CAACO,IAAI,EAAE,MAAM,EAAEP,eAAe,CAACI,SAAS,EAAE,OAAO,CAAC;MACxFL,SAAS,CAACC,eAAe,CAAC,CAAC,CAAE;IAC/B;EACF,CAAC;EACD,oBACEb,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA;MAAKsB,SAAS,EAAC,uBAAuB;MAACC,KAAK,EAAE;QAACC,MAAM,EAAC,OAAO;QAACC,OAAO,EAAC,MAAM;QAACC,cAAc,EAAC,QAAQ;QAACC,UAAU,EAAC;MAAQ,CAAE;MAAAN,QAAA,eACtHrB,OAAA;QAAKsB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,EAC7BhB,CAAC,CAACS,KAAK,CAACc,GAAG,CAAEZ,IAAI,IAAK;UACnB,oBACIhB,OAAA,CAACF,WAAW;YAERkB,IAAI,EAAEA,IAAK;YACXI,IAAI,EAAEJ,IAAI,CAACI,IAAK;YAChBS,KAAK,EAAEb,IAAI,CAACa,KAAM;YAClBZ,SAAS,EAAED,IAAI,CAACC;UAAU,GAJrBD,IAAI,CAACc,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKhB,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eACNlC,OAAA;MAAAqB,QAAA,GAAK,iCAC8B,eAAArB,OAAA;QAAAqB,QAAA,EAAMV,MAAM,CAACM;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,UAChE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACJ,CAAC;AAEP;AAAC9B,EAAA,CAhEuBD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}