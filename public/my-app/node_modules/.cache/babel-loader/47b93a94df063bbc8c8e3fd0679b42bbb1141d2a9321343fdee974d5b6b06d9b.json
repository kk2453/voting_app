{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Voter\\\\my-app\\\\src\\\\components\\\\Otp.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { TextField, Button, Typography, Box, Grid, Paper } from '@mui/material';\n\n// const Otp = (props) => {\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\n//       <Paper elevation={3} style={{ padding: '30px', width: '350px', textAlign: 'center' }}>\n//         <Typography variant=\"h5\" gutterBottom>\n//           Get OTP via Email\n//         </Typography>\n//         <form>\n//           <TextField\n//             label=\"Enter your email\"\n//             variant=\"outlined\"\n//             fullWidth\n//             required\n//             value={props.email}\n//             onChange={(e) => props.setEmail(e.target.value)}\n//             style={{ marginBottom: '20px' }}\n//           />\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//             Send OTP\n//           </Button>\n//         </form>\n//         {props.message && <Typography style={{ color: 'green', marginTop: '20px' }}>{props.message}</Typography>}\n//         {props.error && <Typography style={{ color: 'red', marginTop: '20px' }}>{props.error}</Typography>}\n//       </Paper>\n//     </Grid>\n//   );\n// };\n\n// export default Otp;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Box, Typography, Grid, Paper } from '@mui/material';\nimport './OtpPage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Otp = () => {\n  _s();\n  const [otp, setOtp] = useState(new Array(6).fill(\"\"));\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(''); // State for success messages\n  const navigate = useNavigate();\n  const handleChange = (element, index) => {\n    if (isNaN(element.value)) return; // Allow only numbers\n    setOtp([...otp.map((d, idx) => idx === index ? element.value : d)]);\n\n    // Move to the next input field automatically\n    if (element.nextSibling && element.value) {\n      element.nextSibling.focus();\n    }\n  };\n  const handleSubmit1 = async e => {\n    e.preventDefault();\n    const otpValue = otp.join(\"\");\n    if (otpValue.length === 6) {\n      setError(false);\n      console.log(\"Entered OTP:\", otpValue);\n      // Here you can add the API call to verify the OTP\n      try {\n        const response = await axios.post('https://api.example.com/verify-otp', {\n          otpValue // Send the OTP in the request body\n        });\n\n        // Assuming a successful response\n        if (response.data.success) {\n          setSuccess('OTP verified successfully!');\n          startRecording();\n          navigate(\"/home\");\n          setError(''); // Clear any previous errors\n        } else {\n          setError('Invalid OTP. Please try again.');\n          setSuccess('');\n        }\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n        setError('An error occurred while verifying OTP. Please try again.');\n        setSuccess('');\n      }\n    } else {\n      setError(true);\n    }\n  };\n  const [isRecording, setIsRecording] = useState(false);\n  const [videoURL, setVideoURL] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      // Capture the screen\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          mediaSource: 'screen'\n        }\n      });\n\n      // Initialize MediaRecorder\n      mediaRecorderRef.current = new MediaRecorder(stream, {\n        mimeType: 'video/webm'\n      });\n\n      // Collect the recorded chunks of data\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          recordedChunks.current.push(event.data);\n        }\n      };\n\n      // Handle the stop event\n      mediaRecorderRef.current.onstop = () => {\n        // Create a video URL from the recorded chunks\n        const blob = new Blob(recordedChunks.current, {\n          type: 'video/webm'\n        });\n        const videoURL = URL.createObjectURL(blob);\n        setVideoURL(videoURL);\n        recordedChunks.current = []; // Clear the recorded chunks\n      };\n\n      // Start the recording\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error accessing display media', err);\n    }\n  };\n  const stopRecording = () => {\n    // Stop the recording\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n  const containerRef = useRef(null);\n  //fullscreen code\n  useEffect(() => {\n    // Request full-screen mode when the component mounts\n    if (containerRef.current) {\n      containerRef.current.requestFullscreen();\n    }\n\n    // Disable right-click context menu\n    const handleContextMenu = e => {\n      e.preventDefault();\n    };\n\n    // Disable certain key combinations\n    const handleKeyDown = e => {\n      // Disable F11, Ctrl+T, Ctrl+N, Ctrl+W, and Alt+F4\n      if (e.key === 'F11' || e.ctrlKey && (e.key === 't' || e.key === 'n' || e.key === 'w') || e.altKey && e.key === 'F4') {\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('contextmenu', handleContextMenu);\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      // Clean up the event listeners when the component unmounts\n      window.removeEventListener('contextmenu', handleContextMenu);\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  //cameralive\n  const videoRef = useRef(null);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    }).catch(err => {\n      console.error(\"Error accessing the camera: \", err);\n      alert(\"Could not access the camera. Please allow camera permissions.\");\n    });\n  }, []);\n  const stopCapture = () => {\n    if (streamRef.current) {\n      // Stop all tracks in the media stream\n      streamRef.current.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null; // Clear the video element's source\n      streamRef.current = null; // Clear the stream reference\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          gap: '10px',\n          marginRight: \"40px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"320\",\n          height: \"240\",\n          autoPlay: true,\n          style: {\n            border: \"2px solid blue\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: \"otp-paper\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"textSecondary\",\n          children: \"Please enter the 6-digit code sent to your mobile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit1,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            mb: 2,\n            children: otp.map((data, index) => /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              inputProps: {\n                maxLength: 1,\n                style: {\n                  textAlign: 'center',\n                  fontSize: '24px'\n                }\n              },\n              value: data,\n              onChange: e => handleChange(e.target, index),\n              onFocus: e => e.target.select(),\n              className: \"otp-input\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            align: \"center\",\n            children: \"Please enter all 6 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: \"submit-btn\",\n              children: \"Verify OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Otp, \"iAGnHD+dppX1PbLDx98tU0trft4=\", false, function () {\n  return [useNavigate];\n});\n_c = Otp;\nexport default Otp;\nvar _c;\n$RefreshReg$(_c, \"Otp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","TextField","Button","Box","Typography","Grid","Paper","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Otp","_s","otp","setOtp","Array","fill","error","setError","success","setSuccess","navigate","handleChange","element","index","isNaN","value","map","d","idx","nextSibling","focus","handleSubmit1","e","preventDefault","otpValue","join","length","console","log","response","post","data","startRecording","isRecording","setIsRecording","videoURL","setVideoURL","mediaRecorderRef","recordedChunks","stream","navigator","mediaDevices","getDisplayMedia","video","mediaSource","current","MediaRecorder","mimeType","ondataavailable","event","size","push","onstop","blob","Blob","type","URL","createObjectURL","start","err","stopRecording","stop","containerRef","requestFullscreen","handleContextMenu","handleKeyDown","key","ctrlKey","altKey","window","addEventListener","removeEventListener","videoRef","getUserMedia","then","srcObject","catch","alert","stopCapture","streamRef","getTracks","forEach","track","children","container","justifyContent","alignItems","style","minHeight","display","flexWrap","gap","marginRight","ref","width","height","autoPlay","border","fileName","_jsxFileName","lineNumber","columnNumber","elevation","className","variant","align","gutterBottom","color","onSubmit","marginTop","mb","inputProps","maxLength","textAlign","fontSize","onChange","target","onFocus","select","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Voter/my-app/src/components/Otp.js"],"sourcesContent":["// import React from 'react';\r\n// import { TextField, Button, Typography, Box, Grid, Paper } from '@mui/material';\r\n\r\n// const Otp = (props) => {\r\n\r\n\r\n \r\n\r\n//   return (\r\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '100vh' }}>\r\n//       <Paper elevation={3} style={{ padding: '30px', width: '350px', textAlign: 'center' }}>\r\n//         <Typography variant=\"h5\" gutterBottom>\r\n//           Get OTP via Email\r\n//         </Typography>\r\n//         <form>\r\n//           <TextField\r\n//             label=\"Enter your email\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             required\r\n//             value={props.email}\r\n//             onChange={(e) => props.setEmail(e.target.value)}\r\n//             style={{ marginBottom: '20px' }}\r\n//           />\r\n//           <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n//             Send OTP\r\n//           </Button>\r\n//         </form>\r\n//         {props.message && <Typography style={{ color: 'green', marginTop: '20px' }}>{props.message}</Typography>}\r\n//         {props.error && <Typography style={{ color: 'red', marginTop: '20px' }}>{props.error}</Typography>}\r\n//       </Paper>\r\n//     </Grid>\r\n//   );\r\n// };\r\n\r\n// export default Otp;\r\n\r\nimport React, { useState ,useRef,useEffect} from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TextField, Button, Box, Typography, Grid, Paper } from '@mui/material';\r\nimport './OtpPage.css';\r\nimport axios from 'axios';\r\n\r\nconst Otp = () => {\r\n  const [otp, setOtp] = useState(new Array(6).fill(\"\"));\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(''); // State for success messages\r\n  const navigate = useNavigate();\r\n  const handleChange = (element, index) => {\r\n    if (isNaN(element.value)) return; // Allow only numbers\r\n    setOtp([...otp.map((d, idx) => (idx === index ? element.value : d))]);\r\n\r\n    // Move to the next input field automatically\r\n    if (element.nextSibling && element.value) {\r\n      element.nextSibling.focus();\r\n    }\r\n  };\r\n\r\n  const handleSubmit1 = async(e) => {\r\n    e.preventDefault();\r\n    const otpValue = otp.join(\"\");\r\n    if (otpValue.length === 6) {\r\n      setError(false);\r\n      console.log(\"Entered OTP:\", otpValue);\r\n      // Here you can add the API call to verify the OTP\r\n      try {\r\n        const response = await axios.post('https://api.example.com/verify-otp', {\r\n          otpValue, // Send the OTP in the request body\r\n        });\r\n  \r\n        // Assuming a successful response\r\n        if (response.data.success) {\r\n          setSuccess('OTP verified successfully!');\r\n          startRecording();\r\n          navigate(\"/home\");\r\n          setError(''); // Clear any previous errors\r\n        } else {\r\n          setError('Invalid OTP. Please try again.');\r\n          setSuccess('');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying OTP:', error);\r\n        setError('An error occurred while verifying OTP. Please try again.');\r\n        setSuccess('');\r\n      }\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [videoURL, setVideoURL] = useState(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const recordedChunks = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // Capture the screen\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: { mediaSource: 'screen' },\r\n      });\r\n\r\n      // Initialize MediaRecorder\r\n      mediaRecorderRef.current = new MediaRecorder(stream, {\r\n        mimeType: 'video/webm',\r\n      });\r\n\r\n      // Collect the recorded chunks of data\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          recordedChunks.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      // Handle the stop event\r\n      mediaRecorderRef.current.onstop = () => {\r\n        // Create a video URL from the recorded chunks\r\n        const blob = new Blob(recordedChunks.current, { type: 'video/webm' });\r\n        const videoURL = URL.createObjectURL(blob);\r\n        setVideoURL(videoURL);\r\n        recordedChunks.current = []; // Clear the recorded chunks\r\n      };\r\n\r\n      // Start the recording\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error('Error accessing display media', err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    // Stop the recording\r\n    mediaRecorderRef.current.stop();\r\n    setIsRecording(false);\r\n  };\r\n  const containerRef = useRef(null);\r\n  //fullscreen code\r\n  useEffect(() => {\r\n    // Request full-screen mode when the component mounts\r\n    if (containerRef.current) {\r\n      containerRef.current.requestFullscreen();\r\n    }\r\n\r\n    // Disable right-click context menu\r\n    const handleContextMenu = (e) => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    // Disable certain key combinations\r\n    const handleKeyDown = (e) => {\r\n      // Disable F11, Ctrl+T, Ctrl+N, Ctrl+W, and Alt+F4\r\n      if (\r\n        e.key === 'F11' ||\r\n        (e.ctrlKey && (e.key === 't' || e.key === 'n' || e.key === 'w')) ||\r\n        (e.altKey && e.key === 'F4')\r\n      ) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('contextmenu', handleContextMenu);\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      // Clean up the event listeners when the component unmounts\r\n      window.removeEventListener('contextmenu', handleContextMenu);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n\r\n  //cameralive\r\n  const videoRef = useRef(null);\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        videoRef.current.srcObject = stream;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing the camera: \", err);\r\n        alert(\"Could not access the camera. Please allow camera permissions.\");\r\n      });\r\n  }, []);\r\n  \r\n  const stopCapture = () => {\r\n    if (streamRef.current) {\r\n      // Stop all tracks in the media stream\r\n      streamRef.current.getTracks().forEach((track) => track.stop());\r\n      videoRef.current.srcObject = null; // Clear the video element's source\r\n      streamRef.current = null; // Clear the stream reference\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n    <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', gap: '10px' ,marginRight:\"40px\"}}>\r\n            <video ref={videoRef} width=\"320\" height=\"240\" autoPlay style={{ border: \"2px solid blue\" }}></video>\r\n        </div>\r\n      <Paper elevation={3} className=\"otp-paper\">\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Enter OTP\r\n        </Typography>\r\n        <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\">\r\n          Please enter the 6-digit code sent to your mobile number\r\n        </Typography>\r\n        <form onSubmit={handleSubmit1} style={{ marginTop: \"20px\" }}>\r\n          <Box display=\"flex\" justifyContent=\"center\" mb={2}>\r\n            {otp.map((data, index) => (\r\n              <TextField\r\n                key={index}\r\n                type=\"text\"\r\n                inputProps={{ maxLength: 1, style: { textAlign: 'center', fontSize: '24px' } }}\r\n                value={data}\r\n                onChange={(e) => handleChange(e.target, index)}\r\n                onFocus={(e) => e.target.select()}\r\n                className=\"otp-input\"\r\n              />\r\n            ))}\r\n          </Box>\r\n          {error && <Typography color=\"error\" align=\"center\">Please enter all 6 digits</Typography>}\r\n          <Box textAlign=\"center\">\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"submit-btn\">\r\n              Verify OTP\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Otp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}