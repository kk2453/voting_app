{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\votingapp-1\\\\my-app\\\\src\\\\components\\\\Results.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useNavigate, useState } from 'react';\nimport Notecontext from \"../context/notes/NotesContext\";\nimport Resultitems from './Resultitems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results() {\n  _s();\n  const a = useContext(Notecontext);\n  const navigate = useNavigate;\n  useEffect(() => {\n    if (localStorage.getItem(\"token1\")) {\n      a.getNotes();\n    } else {\n      navigate(\"/\");\n    }\n    // eslint-disable-next-line\n  }, []);\n  const [winner, setwinner] = useState({\n    voteCount: 0,\n    name: \"\"\n  });\n  for (let note of a.notes) {\n    if (note.voteCount > winnner) {\n      setwinner(note.voteCount, note.name);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center\",\n    style: {\n      height: \"500px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-auto\",\n      children: a.notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Resultitems, {\n          note: note,\n          name: note.name,\n          party: note.party,\n          voteCount: note.voteCount\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Reasult::The winner is -\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"Cn0b27rYRzc5TatfEMpHcb433QA=\");\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useContext","useEffect","useNavigate","useState","Notecontext","Resultitems","jsxDEV","_jsxDEV","Results","_s","a","navigate","localStorage","getItem","getNotes","winner","setwinner","voteCount","name","note","notes","winnner","className","style","height","display","justifyContent","alignItems","children","map","party","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/votingapp-1/my-app/src/components/Results.js"],"sourcesContent":["import React,{useContext,useEffect,useNavigate, useState} from 'react'\r\nimport Notecontext from \"../context/notes/NotesContext\";\r\nimport Resultitems from './Resultitems';\r\n\r\nexport default function Results() {\r\n    const a = useContext(Notecontext);\r\n    const navigate=useNavigate;\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token1\")) {\r\n          a.getNotes();\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n        // eslint-disable-next-line\r\n      }, []);\r\n    const [winner,setwinner]=useState({voteCount:0,name:\"\"});\r\n    for (let note of a.notes){\r\n        if(note.voteCount>winnner){\r\n            setwinner(note.voteCount,note.name);\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"container text-center\" style={{height:\"500px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n        <div className=\"row row-cols-auto\">\r\n            {a.notes.map((note) => {\r\n                return (\r\n                    <Resultitems\r\n                        key={note._id}\r\n                        note={note}\r\n                        name={note.name}\r\n                        party={note.party}\r\n                        voteCount={note.voteCount}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n        <div>\r\n            Reasult::The winner is -\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,UAAU,EAACC,SAAS,EAACC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AACtE,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAC;EACjC,MAAMO,QAAQ,GAACT,WAAW;EAC1BD,SAAS,CAAC,MAAM;IACZ,IAAIW,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;MAClCH,CAAC,CAACI,QAAQ,CAAC,CAAC;IACd,CAAC,MAAM;MACLH,QAAQ,CAAC,GAAG,CAAC;IACf;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACR,MAAM,CAACI,MAAM,EAACC,SAAS,CAAC,GAACb,QAAQ,CAAC;IAACc,SAAS,EAAC,CAAC;IAACC,IAAI,EAAC;EAAE,CAAC,CAAC;EACxD,KAAK,IAAIC,IAAI,IAAIT,CAAC,CAACU,KAAK,EAAC;IACrB,IAAGD,IAAI,CAACF,SAAS,GAACI,OAAO,EAAC;MACtBL,SAAS,CAACG,IAAI,CAACF,SAAS,EAACE,IAAI,CAACD,IAAI,CAAC;IACvC;EACJ;EACF,oBACEX,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAACC,KAAK,EAAE;MAACC,MAAM,EAAC,OAAO;MAACC,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC;IAAQ,CAAE;IAAAC,QAAA,gBACtHrB,OAAA;MAAKe,SAAS,EAAC,mBAAmB;MAAAM,QAAA,EAC7BlB,CAAC,CAACU,KAAK,CAACS,GAAG,CAAEV,IAAI,IAAK;QACnB,oBACIZ,OAAA,CAACF,WAAW;UAERc,IAAI,EAAEA,IAAK;UACXD,IAAI,EAAEC,IAAI,CAACD,IAAK;UAChBY,KAAK,EAAEX,IAAI,CAACW,KAAM;UAClBb,SAAS,EAAEE,IAAI,CAACF;QAAU,GAJrBE,IAAI,CAACY,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN5B,OAAA;MAAAqB,QAAA,EAAK;IAEL;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC1B,EAAA,CArCuBD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}